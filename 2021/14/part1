#!/usr/bin/python3
import sys
import fileinput
import json

def p(obj):
    print(json.dumps(obj, indent=2))

def getInput():
    fileRows = []
    with open(sys.argv[1], 'r') as file:
        for line in file:
            fileRows.append(line.rstrip())
    
    return fileRows

# pass multiple lines
# 1 integer per line
def arrayOfIntFromList(input):
    rows = [int(c) for c in input]
    return rows

# pass multiple lines
# returns a 2 dimensional array
def arrayFromGridOfDigits(input):
    rows = []
    for line in input:
        rows.append([int(c) for c in list(line.strip())])
    return rows

# one line in returns an array
def arrayOfStrFromCSV(line):
    return list(line.strip().split(','))

# one line in returns an array
def arrayOfIntFromCSV(line):
    return [int(i) for i in line.strip().split(',')]
    
# one line in returns an array
def arrayOfWordsFromString(line):
    return list(line.strip().split())

def readData():
    rows = []
    for line in fileinput.input():
        # rows.append(line.strip())
        rows.append([int(c) for c in list(line.strip())])
        # [int(i) for i in line.strip().split(',')]

    return rows

def findBlankLine(lines):
    for i in range(len(lines)):
        if (lines[i].strip() == ""):
            return i

def doInsertion(start):
    result = start[0]
    for i in range(len(start)-1):
        result += rules[start[i:i+2]] + start[i+1]
    return result

input = getInput()

# data = arrayFromGridOfDigits(input)
# p(data)

# data = arrayOfIntFromCSV(input[0])
# p(data)

template = input[0]

rules = {}
for rule in input[2:]:
    key,value = rule.split(" -> ")
    rules[key] = value

p(rules)

str = template
for i in range(10):
    p(i)
    str = doInsertion(str)
    # p(str)

found = []
max = 0
min = 999999999
for c in str:
    if (c not in found):
        found.append(c)
        count = str.count(c)
        if (count > max):
            max = count
        if (count < min):
            min = count

p(max-min)