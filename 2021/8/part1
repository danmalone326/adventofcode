#!/usr/bin/python3
import fileinput
import json

def readData():
    rows = []
    for line in fileinput.input():
        splitLine = line.strip().split('|')
# [int(i) for i in line.strip().split(',')]
        input = [''.join(sorted(d)) for d in splitLine[0].strip().split()]
        output = [''.join(sorted(d)) for d in splitLine[1].strip().split()]
        dataPair = {'input': input, 'output': output}
        rows.append(dataPair)

    return rows

def getMissing(digit):
    result = "abcdefg"
    for segment in digit:
        result = result.replace(segment,'')
    return result

def isIn(segment,digit):
    return (segment in digit)


rows = readData()

count = 0
valueTotal = 0
for row in rows:
    for digit in row['output']:
        if (len(digit) in [2,3,4,7]):
            count += 1

    decode = {}
    encode = [None]*10
    # find 1
    for digit in row['input']:
        if (len(digit) == 2):
            decode[digit] = '1'
            encode[1] = digit
            break
    # find 4
    for digit in row['input']:
        if (len(digit) == 4):
            decode[digit] = '4'
            encode[4] = digit
            break
    # find 7
    for digit in row['input']:
        if (len(digit) == 3):
            decode[digit] = '7'
            encode[7] = digit
            break
    # find 8
    for digit in row['input']:
        if (len(digit) == 7):
            decode[digit] = '8'
            encode[8] = digit
            break

    # find 6
    for digit in row['input']:
        missing = getMissing(digit)
        if ((len(missing) == 1) and (isIn(missing,encode[1]))):
            decode[digit] = '6'
            encode[6] = digit
            break

    # find 0
    for digit in row['input']:
        missing = getMissing(digit)
        if ((len(missing) == 1) and (isIn(missing,encode[4])) and (not isIn(missing,encode[1]))):
            decode[digit] = '0'
            encode[0] = digit
            break

    # find 9
    for digit in row['input']:
        missing = getMissing(digit)
        if ((len(missing) == 1) and (digit not in [encode[6],encode[0]])):
            decode[digit] = '9'
            encode[9] = digit
            break

    # find 2
    for digit in row['input']:
        missing = getMissing(digit)
        if ((len(missing) == 2) and (isIn(missing[0],encode[4])) and (isIn(missing[1],encode[4]))):
            decode[digit] = '2'
            encode[2] = digit
            break

    # find 5
    for digit in row['input']:
        missing = getMissing(digit)
        if ((len(missing) == 2) and (digit != encode[2]) and ((isIn(missing[0],encode[1])) or (isIn(missing[1],encode[1])))):
            decode[digit] = '5'
            encode[5] = digit
            break

    # find 3
    for digit in row['input']:
        missing = getMissing(digit)
        if ((len(missing) == 2) and (digit not in [encode[2],encode[5]])):
            decode[digit] = '3'
            encode[3] = digit
            break

    value = int(''.join([decode[digit] for digit in row['output']]))
    print(value)
    valueTotal += value

print(count)
print(valueTotal)
