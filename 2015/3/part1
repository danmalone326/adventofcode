#!/usr/bin/python3
import sys
import fileinput
import json
import math
import re
import copy

debug=True
def p(obj):
    if type(obj) in [str,int]:
        print(obj)
    else:
        print(json.dumps(obj, indent=2))

def pd(obj):
    if debug:
        p(obj)

def wait():
    input("Press Enter to continue...")

def getInput():
    fileRows = []
    with open(sys.argv[1], 'r') as file:
        for line in file:
            fileRows.append(line.rstrip())
    
    return fileRows

# pass multiple lines
# 1 integer per line
def arrayOfIntFromList(input):
    rows = [int(c) for c in input]
    return rows

# pass multiple lines
# returns a 2 dimensional array
def arrayFromGridOfDigits(input):
    rows = []
    for line in input:
        rows.append([int(c) for c in list(line.strip())])
    return rows

# one line in returns an array
def arrayOfStrFromCSV(line):
    return list(line.strip().split(','))

# one line in returns an array
def arrayOfIntFromCSV(line):
    return [int(i) for i in line.strip().split(',')]
    
# one line in returns an array
def arrayOfWordsFromString(line):
    return list(line.strip().split())

def readData():
    rows = []
    for line in fileinput.input():
        # rows.append(line.strip())
        rows.append([int(c) for c in list(line.strip())])
        # [int(i) for i in line.strip().split(',')]

    return rows

def findBlankLine(lines):
    for i in range(len(lines)):
        if (lines[i].strip() == ""):
            return i

def keyInit(dict,key,initialValue):
    if (key not in dict):
        dict[key] = initialValue

def parseInput(input):
    data = arrayOfIntFromCSV(input[0])
    return data

def posKey(x,y):
    return '{}-{}'.format(x,y)

def recordPos(mapCount,x,y):
    key = posKey(x,y)
    keyInit(mapCount,key,0)
    mapCount[key] += 1

def getPos(mapCount,x,y):
    key = posKey(x,y)
    return mapCount[key]

move = {
    '^': [0,-1],
    'v': [0,1],
    '<': [-1,0],
    '>': [1,0]
}
def movePos(x,y,dir):
    newX = x + move[dir][0]
    newY = y + move[dir][1]
    return newX, newY

debug = True

sourceInput = getInput()

# data = arrayFromGridOfDigits(sourceInput)
# p(data)

data = sourceInput

for line in data:
    santaCount = {}
    x = 0
    y = 0
    recordPos(santaCount,x,y)
    for dir in line:
        x, y = movePos(x,y,dir)
        recordPos(santaCount,x,y)

    p(len(santaCount))

