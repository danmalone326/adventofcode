#!/usr/bin/python3
import sys
import fileinput
import json

def p(obj):
    print(json.dumps(obj, indent=2))

def getInput():
    fileRows = []
    with open(sys.argv[1], 'r') as file:
        for line in file:
            fileRows.append(line.rstrip())
    
    return fileRows

# pass multiple lines
# 1 integer per line
def arrayOfIntFromList(input):
    rows = [int(c) for c in input]
    return rows

# pass multiple lines
# returns a 2 dimensional array
def arrayFromGridOfDigits(input):
    rows = []
    for line in input:
        rows.append([int(c) for c in list(line.strip())])
    return rows

# one line in returns an array
def arrayOfStrFromCSV(line):
    return list(line.strip().split(','))

# one line in returns an array
def arrayOfIntFromCSV(line):
    return [int(i) for i in line.strip().split(',')]
    
# one line in returns an array
def arrayOfWordsFromString(line):
    return list(line.strip().split())

def readData():
    rows = []
    for line in fileinput.input():
        # rows.append(line.strip())
        rows.append([int(c) for c in list(line.strip())])
        # [int(i) for i in line.strip().split(',')]

    return rows

def findBlankLine(lines):
    for i in range(len(lines)):
        if (lines[i].strip() == ""):
            return i

def keyInit(dict,key,initialValue):
    if (key not in dict):
        dict[key] = initialValue


def printScreen(pixels):
    rows = int(len(pixels)/40)
    for i in range(rows):
        print(pixels[i*40:(i+1)*40])

input = getInput()

# data = arrayFromGridOfDigits(input)
# p(data)


cycle = 0
xRegister = 1
ssSum = 0
pixels = ""

for line in input:
    if (line == 'noop'):
        cycles = 1
        adder = 0
    else:
        cycles = 2
        adder = int(line.split(" ")[1])
    for i in range(cycles):
        cycle += 1
        if ((cycle-20)%40 == 0):
            signalStrength = cycle * xRegister
            ssSum += signalStrength

        if (abs(((cycle-1)%40)-xRegister) <= 1):
            pixels += "#"
        else:
            pixels += "."
    xRegister += adder

p(ssSum)
printScreen(pixels)