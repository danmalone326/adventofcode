#!/usr/bin/python3
import sys
import fileinput
import json
import math
import re

def p(obj):
    print(json.dumps(obj, indent=2))

def getInput():
    fileRows = []
    with open(sys.argv[1], 'r') as file:
        for line in file:
            fileRows.append(line.rstrip())
    
    return fileRows

# pass multiple lines
# 1 integer per line
def arrayOfIntFromList(input):
    rows = [int(c) for c in input]
    return rows

# pass multiple lines
# returns a 2 dimensional array
def arrayFromGridOfDigits(input):
    rows = []
    for line in input:
        rows.append([int(c) for c in list(line.strip())])
    return rows

# one line in returns an array
def arrayOfStrFromCSV(line):
    return list(line.strip().split(','))

# one line in returns an array
def arrayOfIntFromCSV(line):
    return [int(i) for i in line.strip().split(',')]
    
# one line in returns an array
def arrayOfWordsFromString(line):
    return list(line.strip().split())

def readData():
    rows = []
    for line in fileinput.input():
        # rows.append(line.strip())
        rows.append([int(c) for c in list(line.strip())])
        # [int(i) for i in line.strip().split(',')]

    return rows

def findBlankLine(lines):
    for i in range(len(lines)):
        if (lines[i].strip() == ""):
            return i

def keyInit(dict,key,initialValue):
    if (key not in dict):
        dict[key] = initialValue

def parseInput(input):
    allGames = {}
    for line in input:
        (game,draws) = line.split(": ",1)
        p(game)
        p(draws)
        gameNum = int(game.split()[1])
        p(gameNum)
        thisGame = { "draws": [], "max": {"red": 0, "green": 0, "blue": 0} }
        max = thisGame["max"]
        for draw in draws.split("; "):
            thisDraw = {}
            for colorCount in draw.split(", "):
                (countStr,color) = colorCount.split()
                count = int(countStr)
                thisDraw[color] = count
                if (color not in max) or count > max[color]:
                    max[color] = count
            thisGame["draws"].append(thisDraw)
        allGames[gameNum] = thisGame

    return allGames

input = getInput()

# data = arrayFromGridOfDigits(input)
# p(data)

# data = arrayOfIntFromCSV(input[0])

data = parseInput(input)
p(data)

bag = {"red": 12, "green": 13, "blue": 14}

total = 0
powerTotal = 0
for gameNum in data:
    game = data[gameNum]
    gamePass = True
    for color in game["max"]:
        if (game["max"][color] > bag[color]):
            gamePass = False
            break
    if gamePass:
        total += int(gameNum)
    powerTotal += game["max"]["red"] * game["max"]["green"] * game["max"]["blue"]

p(total)
p(powerTotal)