#!/usr/bin/python3
import sys
import fileinput
import json
import math
import re

debug=True
def p(obj):
    print(json.dumps(obj, indent=2))

def pd(obj):
    if debug:
        p(obj)

def getInput():
    fileRows = []
    with open(sys.argv[1], 'r') as file:
        for line in file:
            fileRows.append(line.rstrip())
    
    return fileRows

# pass multiple lines
# 1 integer per line
def arrayOfIntFromList(input):
    rows = [int(c) for c in input]
    return rows

# pass multiple lines
# returns a 2 dimensional array
def arrayFromGridOfDigits(input):
    rows = []
    for line in input:
        rows.append([int(c) for c in list(line.strip())])
    return rows

# one line in returns an array
def arrayOfStrFromCSV(line):
    return list(line.strip().split(','))

# one line in returns an array
def arrayOfIntFromCSV(line):
    return [int(i) for i in line.strip().split(',')]
    
# one line in returns an array
def arrayOfWordsFromString(line):
    return list(line.strip().split())

def readData():
    rows = []
    for line in fileinput.input():
        # rows.append(line.strip())
        rows.append([int(c) for c in list(line.strip())])
        # [int(i) for i in line.strip().split(',')]

    return rows

def findBlankLine(lines):
    for i in range(len(lines)):
        if (lines[i].strip() == ""):
            return i

def keyInit(dict,key,initialValue):
    if (key not in dict):
        dict[key] = initialValue

def parseInput(input):
    data = []
    for line in input:
        data.append([int(i) for i in line.split()])
    return data


def findNextValue(thisRow):
    allZeros = True
    nextRow = []
    for i in range(len(thisRow)-1):
        thisValue = thisRow[i+1] - thisRow[i]
        nextRow.append(thisValue)
        if thisValue != 0:
            allZeros = False

    if allZeros:
        nextRowValue = 0
    else:
        nextRowValue = findNextValue(nextRow)

    nextValue = thisRow[-1] + nextRowValue

    return nextValue

def findPrevValue(thisRow):
    allZeros = True
    nextRow = []
    for i in range(len(thisRow)-1):
        thisValue = thisRow[i+1] - thisRow[i]
        nextRow.append(thisValue)
        if thisValue != 0:
            allZeros = False

    if allZeros:
        prevRowValue = 0
    else:
        prevRowValue = findPrevValue(nextRow)

    prevValue = thisRow[0] - prevRowValue

    return prevValue

debug = True

input = getInput()

# data = arrayFromGridOfDigits(input)
# p(data)

data = parseInput(input)
pd(data)

sum = 0
prevSum = 0
for row in data:
    thisValue = findNextValue(row)
    prevValue = findPrevValue(row)
    # p(thisValue)
    sum += thisValue
    prevSum += prevValue

p(sum)
p(prevSum)