#!/usr/bin/python3
import sys
import fileinput
import json
import math
import re

def p(obj):
    print(json.dumps(obj, indent=2))

def getInput():
    fileRows = []
    with open(sys.argv[1], 'r') as file:
        for line in file:
            fileRows.append(line.rstrip())
    
    return fileRows

# pass multiple lines
# 1 integer per line
def arrayOfIntFromList(input):
    rows = [int(c) for c in input]
    return rows

# pass multiple lines
# returns a 2 dimensional array
def arrayFromGridOfDigits(input):
    rows = []
    for line in input:
        rows.append([int(c) for c in list(line.strip())])
    return rows

# one line in returns an array
def arrayOfStrFromCSV(line):
    return list(line.strip().split(','))

# one line in returns an array
def arrayOfIntFromCSV(line):
    return [int(i) for i in line.strip().split(',')]
    
# one line in returns an array
def arrayOfWordsFromString(line):
    return list(line.strip().split())

def readData():
    rows = []
    for line in fileinput.input():
        # rows.append(line.strip())
        rows.append([int(c) for c in list(line.strip())])
        # [int(i) for i in line.strip().split(',')]

    return rows

def findBlankLine(lines):
    for i in range(len(lines)):
        if (lines[i].strip() == ""):
            return i

def keyInit(dict,key,initialValue):
    if (key not in dict):
        dict[key] = initialValue

def waysToWinCount(t,record):
    count = 0
    for x in range(t+1):
        d = (t*x) - (x*x)
        if d>record:
            count += 1

    return count

def waysToWinCount2(t,record):
    count = 0

    rt = math.sqrt(t ** 2 - 4 * record)

    low = (t - rt)/2
    high = (t + rt)/2
    

    count = math.floor(high) - math.ceil(low) + 1

    return count


input = getInput()

# data = arrayFromGridOfDigits(input)
# p(data)

# data = arrayOfIntFromCSV(input[0])

times = [int(x) for x in input[0].split(":")[1].split()]
distance = [int(x) for x in input[1].split(":")[1].split()]
data = [[times[i],distance[i]] for i in range(len(times))]
p(data)

# margin = 1
# for d in data:
#     c = waysToWinCount(d[0],d[1])
#     margin *= c

# p(margin)

# c = waysToWinCount(int(input[0].split(":")[1].replace(" ","")),int(input[1].split(":")[1].replace(" ","")))
# p(c)

c = waysToWinCount2(int(input[0].split(":")[1].replace(" ","")),int(input[1].split(":")[1].replace(" ","")))
p(c)